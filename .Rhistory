labs(x='Mean age (ka BP)', y='Age uncertainty (ka)')+
scale_fill_manual(name=NULL,
values = '#FFD28A',
labels = c('Project timeframe'),
guide = guide_legend(override.aes = list(alpha = 1)))+
scale_color_manual(name='Dating method', values=color_discrete, labels=label_discrete)+
theme_pub()+
theme(legend.position='right',
#legend.background = element_rect(fill='#FFFFFF00',
#                                 size=.5, linetype="solid",
#                                 colour = NA),
#legend.key=element_blank(),
legend.spacing.y = unit(0, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))+
guides(color = guide_legend(ncol = 1, byrow = TRUE))
plt1
ggsave('fig_coverage_temporal/fig_coverage_temporal.png', width=132, height=90, units='mm', dpi=300, bg='white')
ggsave('fig_coverage_temporal/fig_coverage_temporal.tiff', width=132, height=90, units='mm', dpi=300, bg='white')
ggsave('fig_coverage_temporal/fig_coverage_temporal.pdf', width=132, height=90, units='mm', bg='white')
ggsave('fig_coverage_temporal/fig_coverage_temporal.png', width=132, height=90, units='mm', dpi=300, bg='white')
ggsave('fig_coverage_temporal/fig_coverage_temporal.tiff', width=132, height=90, units='mm', dpi=300, bg='white')
library(tidyverse)
library(readr)
library(sf)
library(ggspatial)
library(cowplot)
# Import data
table <- read_delim('fig_coverage/road_coverage.csv',
delim = ';', escape_double = FALSE, trim_ws = TRUE)
# Import data
table <- read_delim('fig_coverage/road_coverage.csv',
delim = ',', escape_double = FALSE, trim_ws = TRUE)
View(table)
# Import data
table <- read_delim('fig_coverage/road_coverage.csv',
delim = ',', escape_double = FALSE, trim_ws = TRUE) %>% select(-...1)
View(table)
table[is.na(table$locality.x)|is.na(table$locality.y),] # Show localities without coordinates
library(tidyverse)
library(readr)
library(sf)
library(ggspatial)
library(cowplot)
# Import data
table <- read_delim('fig_coverage/road_coverage.csv',
delim = ',', escape_double = FALSE, trim_ws = TRUE) %>% select(-...1)
table[is.na(table$locality.x)|is.na(table$locality.y),] # Show localities without coordinates
table[is.na(table$locality.x)|is.na(table$locality.y),] %>% count() # Show localities without coordinates
table[is.na(table$locality.idlocality),] # Show localities without locality name
theme_pub <-  function(){
list(theme_classic(),
theme(text=element_text(size=8), #change font size of all text
axis.text=element_text(size=8), #change font size of axis text
axis.title=element_text(size=8), #change font size of axis titles
plot.title=element_text(size=8), #change font size of plot title
legend.text=element_text(size=8), #change font size of legend text
legend.title=element_text(size=8)
))
}
# World map ----
## Aggregate assemblages per locality
table2 <- table %>%
distinct(locality.idlocality, assemblage.name, .keep_all = TRUE) %>%   # filter out duplicates due to dating
drop_na(c(locality.x, locality.y)) %>%
count(locality.idlocality, locality.x, locality.y, sort=T)
## Make geodata
points <- st_as_sf(x = table2,
coords = c('locality.x', 'locality.y'),
#crs = '+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0',
crs = st_crs(4326))
## Mapping
### Download background maps
world <- rnaturalearth::ne_countries(scale = 110, returnclass = 'sf') %>% st_transform(crs=st_crs(4326)) %>% st_make_valid()
### define a long & slim polygon that overlaps the meridian line & set its CRS to match that of world
offset <- 180-60
polygon <- st_polygon(x = list(rbind(
c(-0.0001 - offset, 90),
c(0 - offset, 90),
c(0 - offset, -90),
c(-0.0001 - offset, -90),
c(-0.0001 - offset, 90)
))) %>%
st_sfc() %>%
st_set_crs(4326)
### Remove slim polygon
world <- world %>% st_difference(polygon)
plt1<- ggplot()+
geom_sf(data=world, color = 'white', fill = '#FFD28A', size=0.2)+
geom_sf(data=points, aes(size=n), fill='#A70D1F', color='grey10', shape=21)+
#coord_sf(crs = '+init=epsg:4326', xlim=c(-20, 180), ylim = c(-90, +90), expand=F)+
#coord_sf(crs = '+proj=moll +lon_0=60 +x_0=0 +y_0=0 +R=6371000 +units=m +no_defs')+
#coord_sf(crs = '+proj=wink2 +lon_0=60 +lat_1=50.4597762521898 +x_0=0 +y_0=0 +R=6371000 +units=m +no_defs')+
#coord_sf(crs = '+proj=eck4 +lon_0=60 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs',xlim=c(-2400000, 180), expand=F)+
coord_sf(crs = '+proj=natearth2 +lon_0=60 +x_0=0 +y_0=0 +R=6371008.7714 +units=m +no_defs +type=crs',xlim=c(-7500000,8600000), ylim=c(-4500000,8000000), expand=T)+
#coord_sf(crs = '+proj=natearth2 +lon_0=60 +x_0=0 +y_0=0 +R=6371008.7714 +units=m +no_defs +type=crs', expand=F)+
scale_x_continuous(breaks = seq(-180, 180, by = 30))+
scale_y_continuous(breaks = seq(-90, 90, by = 30))+
scale_size_continuous(name='Number of\nassemblages\nper locality', breaks=c(1,10,100,1000), labels=c(1,10,100,1000), limits = c(0,1000), range = c(.1, 18))+
#scale_fill_continuous(name='Number of assemblages', low='#A70D1F', high='#A70D1F50', limits = c(0,1000))+
#scale_color_continuous(name='Number of assemblages', low='#FFFFFF10', high='#FFFFFF99', limits = c(0,1000))+
annotation_scale(location = 'bl', width_hint = 0.2) +
theme_pub()+
theme(panel.grid.major = element_line(color = '#DDDDDD', linetype = 'solid', size = 0.2),
panel.background = element_rect(color = 'black', fill='#5D9CA5'),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
#legend.position='right',
legend.justification = c(1, 0), legend.position = c(0.99, 0.01),
legend.title = element_text(colour="black", size=8),
legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF',
size=.5, linetype="solid",
colour ="black"),
legend.key=element_blank(),
plot.margin = margin(l=24, t=6, b=6, r=12, 'pt'))
plt1
View(points)
ggsave('fig_coverage/fig_coverage_A.png', width=180, height=150, units='mm', dpi=300)
# Bar Chart
table3 <- table %>%
distinct(locality.idlocality, assemblage.name, .keep_all = TRUE) %>%   # filter out duplicates due to dating
group_by(country_continent.continent) %>%
summarize(no_assemblages = n_distinct(assemblage.name, locality.idlocality), no_localities = n_distinct(locality.idlocality)) %>%
pivot_longer(cols=-country_continent.continent, names_to = 'variable', values_to = 'value') %>%
mutate(country_continent.continent = factor(country_continent.continent, levels = c('Asia', 'Africa', 'Europe')))
# Bar Chart
table3 <- table %>%
distinct(locality.idlocality, assemblage.name, .keep_all = TRUE) #%>%   # filter out duplicates due to dating
# Bar Chart
table3 <- table %>%
distinct(locality.idlocality, assemblage.name, .keep_all = TRUE) %>%   # filter out duplicates due to dating
group_by(country_continent.continent) #%>%
# Bar Chart
table3 <- table %>%
distinct(locality.idlocality, assemblage.name, .keep_all = TRUE) %>%   # filter out duplicates due to dating
group_by(country_continent.continent) %>%
summarize(no_assemblages = n_distinct(assemblage.name, locality.idlocality), no_localities = n_distinct(locality.idlocality)) %>%
pivot_longer(cols=-country_continent.continent, names_to = 'variable', values_to = 'value') %>%
mutate(country_continent.continent = factor(country_continent.continent, levels = c('Asia', 'Africa', 'Europe')))
View(table3)
5432+4444+12815
600+512+612
# Bar Chart
table3 <- table %>%
distinct(locality.idlocality, assemblage.name, .keep_all = TRUE) %>%   # filter out duplicates due to dating
group_by(country_continent.continent) %>%
summarize(no_assemblages = n_distinct(assemblage.name, locality.idlocality), no_localities = n_distinct(locality.idlocality)) %>%
pivot_longer(cols=-country_continent.continent, names_to = 'variable', values_to = 'value') %>%
mutate(country_continent.continent = factor(country_continent.continent, levels = c('Asia', 'Africa', 'Europe')))
View(table3)
plt2 <- ggplot()+
geom_bar(data=table3, stat = 'identity', aes(y=country_continent.continent, x=value, fill=variable), position=position_dodge2(reverse=T))+
scale_fill_manual(values=c('#F07241', '#A70D1F'), name='Number of', labels=c('assemblages','localities'))+
scale_x_continuous(limits=c(0,13500), breaks = seq(0,12000,2000), expand = c(0,0))+
labs(x='Count', y='')+
geom_text(data=table3, stat='identity', aes(y=country_continent.continent, x=value, group=variable, label=value), position = position_dodge2(width = .9, reverse=T), hjust=-.1, size=2.8)+
theme_pub()+
theme(#legend.position='bottom',
legend.justification = c(1, 0), legend.position = c(0.98, 0.02),
legend.title = element_text(colour="black", size=8),
legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF',
size=.5, linetype="solid",
colour ="white"),
legend.key=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(color = '#CCCCCC', linetype = 'solid', size = 0.4),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))
plt2
ggsave('fig_coverage/fig_coverage_B.png', width=180, height=180, units='mm', dpi=300)
# Time chart
table <- table %>% mutate(age_mean=(query_age_max+query_age_min)/2, age_range=(query_age_max-query_age_min))
plt3 <- ggplot()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_histogram(data=table, aes(x=age_mean, fill=country_continent.continent))+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(1000,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_continuous(breaks=seq(0,3000,500), limits=c(0,3000),expand = c(0,0))+
annotation_logticks(sides='b')+
labs(x='Age (ka BP)', y='Number of assemblages')+
scale_fill_manual(name=NULL,
values = c('#F07241','#A59837','#5D9CA5','#FFD28A'),
labels = c('Africa','Asia','Europe','Project\ntimeframe'),
guide = guide_legend(override.aes = list(alpha = 1)))+
theme_pub()+
theme(legend.justification = c(0, 1), legend.position = c(0.02, 0.98),
#legend.title = element_text(colour="black", size=8),
#legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF00',
size=.5, linetype="solid",
colour = NA),
legend.key=element_blank(),
legend.spacing.y = unit(1, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))
plt3
View(table)
# Time chart
table4 <- table %>%
filter(query_age_min==-1 | query_age_max==-1)
View(table4)
# Time chart
table4 <- table %>%
filter(query_age_min==-1 | query_age_max==-1) %>%
mutate(age_mean=(query_age_max+query_age_min)/2, age_range=(query_age_max-query_age_min))
plt3 <- ggplot()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_histogram(data=table4, aes(x=age_mean, fill=country_continent.continent))+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(1000,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_continuous(breaks=seq(0,3000,500), limits=c(0,3000),expand = c(0,0))+
annotation_logticks(sides='b')+
labs(x='Age (ka BP)', y='Number of assemblages')+
scale_fill_manual(name=NULL,
values = c('#F07241','#A59837','#5D9CA5','#FFD28A'),
labels = c('Africa','Asia','Europe','Project\ntimeframe'),
guide = guide_legend(override.aes = list(alpha = 1)))+
theme_pub()+
theme(legend.justification = c(0, 1), legend.position = c(0.02, 0.98),
#legend.title = element_text(colour="black", size=8),
#legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF00',
size=.5, linetype="solid",
colour = NA),
legend.key=element_blank(),
legend.spacing.y = unit(1, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))
plt3
# Time chart
table4 <- table %>%
filter(!query_age_min==-1 | query_age_max==-1) %>%
mutate(age_mean=(query_age_max+query_age_min)/2, age_range=(query_age_max-query_age_min))
plt3 <- ggplot()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_histogram(data=table4, aes(x=age_mean, fill=country_continent.continent))+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(1000,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_continuous(breaks=seq(0,3000,500), limits=c(0,3000),expand = c(0,0))+
annotation_logticks(sides='b')+
labs(x='Age (ka BP)', y='Number of assemblages')+
scale_fill_manual(name=NULL,
values = c('#F07241','#A59837','#5D9CA5','#FFD28A'),
labels = c('Africa','Asia','Europe','Project\ntimeframe'),
guide = guide_legend(override.aes = list(alpha = 1)))+
theme_pub()+
theme(legend.justification = c(0, 1), legend.position = c(0.02, 0.98),
#legend.title = element_text(colour="black", size=8),
#legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF00',
size=.5, linetype="solid",
colour = NA),
legend.key=element_blank(),
legend.spacing.y = unit(1, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))
plt3
plt3 <- ggplot()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_histogram(data=table4, aes(x=age_mean, fill=country_continent.continent))+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(1000,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_continuous(breaks=seq(0,NA,500), limits=c(0,3000),expand = c(0,0))+
annotation_logticks(sides='b')+
labs(x='Age (ka BP)', y='Number of assemblages')+
scale_fill_manual(name=NULL,
values = c('#F07241','#A59837','#5D9CA5','#FFD28A'),
labels = c('Africa','Asia','Europe','Project\ntimeframe'),
guide = guide_legend(override.aes = list(alpha = 1)))+
theme_pub()+
theme(legend.justification = c(0, 1), legend.position = c(0.02, 0.98),
#legend.title = element_text(colour="black", size=8),
#legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF00',
size=.5, linetype="solid",
colour = NA),
legend.key=element_blank(),
legend.spacing.y = unit(1, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))
plt3
plt3 <- ggplot()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_histogram(data=table4, aes(x=age_mean, fill=country_continent.continent))+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(1000,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_continuous(breaks=seq(0,,500), limits=c(0,3000),expand = c(0,0))+
annotation_logticks(sides='b')+
labs(x='Age (ka BP)', y='Number of assemblages')+
scale_fill_manual(name=NULL,
values = c('#F07241','#A59837','#5D9CA5','#FFD28A'),
labels = c('Africa','Asia','Europe','Project\ntimeframe'),
guide = guide_legend(override.aes = list(alpha = 1)))+
theme_pub()+
theme(legend.justification = c(0, 1), legend.position = c(0.02, 0.98),
#legend.title = element_text(colour="black", size=8),
#legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF00',
size=.5, linetype="solid",
colour = NA),
legend.key=element_blank(),
legend.spacing.y = unit(1, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))
plt3
plt3 <- ggplot()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_histogram(data=table4, aes(x=age_mean, fill=country_continent.continent))+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(1000,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_continuous(breaks=seq(0,3000,500), limits=c(0,),expand = c(0,0))+
annotation_logticks(sides='b')+
labs(x='Age (ka BP)', y='Number of assemblages')+
scale_fill_manual(name=NULL,
values = c('#F07241','#A59837','#5D9CA5','#FFD28A'),
labels = c('Africa','Asia','Europe','Project\ntimeframe'),
guide = guide_legend(override.aes = list(alpha = 1)))+
theme_pub()+
theme(legend.justification = c(0, 1), legend.position = c(0.02, 0.98),
#legend.title = element_text(colour="black", size=8),
#legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF00',
size=.5, linetype="solid",
colour = NA),
legend.key=element_blank(),
legend.spacing.y = unit(1, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))
plt3
plt3 <- ggplot()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_histogram(data=table4, aes(x=age_mean, fill=country_continent.continent))+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(1000,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_continuous(breaks=seq(0,3000,500),expand = c(0,0))+
annotation_logticks(sides='b')+
labs(x='Age (ka BP)', y='Number of assemblages')+
scale_fill_manual(name=NULL,
values = c('#F07241','#A59837','#5D9CA5','#FFD28A'),
labels = c('Africa','Asia','Europe','Project\ntimeframe'),
guide = guide_legend(override.aes = list(alpha = 1)))+
theme_pub()+
theme(legend.justification = c(0, 1), legend.position = c(0.02, 0.98),
#legend.title = element_text(colour="black", size=8),
#legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF00',
size=.5, linetype="solid",
colour = NA),
legend.key=element_blank(),
legend.spacing.y = unit(1, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))
plt3
ggsave('fig_coverage/fig_coverage_C.png', width=180, height=180, units='mm', dpi=300)
# Combine plots
bottom_row <- plot_grid(plt2, plt3, labels = c('B', 'C'), align='hv', axis='tblr', label_size = 10, ncol=2)
bottom_row
top_row <- plot_grid(plt1, labels=c('A'), label_size=10)
full_plot <- plot_grid(top_row, bottom_row, nrow=2, rel_heights = c(2,.8), align='h', axis='l')
full_plot
ggsave('fig_coverage/fig_coverage.png', width=190.5, height=200, units='mm', dpi=300, bg='white')
ggsave('fig_coverage/fig_coverage.tiff', width=190.5, height=200, units='mm', dpi=300, bg='white')
plt2 <- ggplot()+
geom_bar(data=table3, stat = 'identity', aes(y=country_continent.continent, x=value, fill=variable), position=position_dodge2(reverse=T))+
scale_fill_manual(values=c('#F07241', '#A70D1F'), name='Number of', labels=c('assemblages','localities'))+
scale_x_continuous(limits=c(0,14500), breaks = seq(0,14000,2000), expand = c(0,0))+
labs(x='Count', y='')+
geom_text(data=table3, stat='identity', aes(y=country_continent.continent, x=value, group=variable, label=value), position = position_dodge2(width = .9, reverse=T), hjust=-.1, size=2.8)+
theme_pub()+
theme(#legend.position='bottom',
legend.justification = c(1, 0), legend.position = c(0.98, 0.02),
legend.title = element_text(colour="black", size=8),
legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF',
size=.5, linetype="solid",
colour ="white"),
legend.key=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(color = '#CCCCCC', linetype = 'solid', size = 0.4),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))
plt2
# Combine plots
bottom_row <- plot_grid(plt2, plt3, labels = c('B', 'C'), align='hv', axis='tblr', label_size = 10, ncol=2)
bottom_row
top_row <- plot_grid(plt1, labels=c('A'), label_size=10)
full_plot <- plot_grid(top_row, bottom_row, nrow=2, rel_heights = c(2,.8), align='h', axis='l')
full_plot
ggsave('fig_coverage/fig_coverage.png', width=190.5, height=200, units='mm', dpi=300, bg='white')
plt2 <- ggplot()+
geom_bar(data=table3, stat = 'identity', aes(y=country_continent.continent, x=value, fill=variable), position=position_dodge2(reverse=T))+
scale_fill_manual(values=c('#F07241', '#A70D1F'), name='Number of', labels=c('assemblages','localities'))+
scale_x_continuous(limits=c(0,14000), breaks = seq(0,14000,2000), expand = c(0,0))+
labs(x='Count', y='')+
geom_text(data=table3, stat='identity', aes(y=country_continent.continent, x=value, group=variable, label=value), position = position_dodge2(width = .9, reverse=T), hjust=-.1, size=2.8)+
theme_pub()+
theme(#legend.position='bottom',
legend.justification = c(1, 0), legend.position = c(0.98, 0.02),
legend.title = element_text(colour="black", size=8),
legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF',
size=.5, linetype="solid",
colour ="white"),
legend.key=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(color = '#CCCCCC', linetype = 'solid', size = 0.4),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))
plt2
# Combine plots
bottom_row <- plot_grid(plt2, plt3, labels = c('B', 'C'), align='hv', axis='tblr', label_size = 10, ncol=2)
top_row <- plot_grid(plt1, labels=c('A'), label_size=10)
full_plot <- plot_grid(top_row, bottom_row, nrow=2, rel_heights = c(2,.8), align='h', axis='l')
full_plot
ggsave('fig_coverage/fig_coverage.png', width=190.5, height=200, units='mm', dpi=300, bg='white')
plt2 <- ggplot()+
geom_bar(data=table3, stat = 'identity', aes(y=country_continent.continent, x=value, fill=variable), position=position_dodge2(reverse=T))+
scale_fill_manual(values=c('#F07241', '#A70D1F'), name='Number of', labels=c('assemblages','localities'))+
scale_x_continuous(limits=c(0,14500), breaks = seq(0,14000,2000), expand = c(0,0))+
labs(x='Count', y='')+
geom_text(data=table3, stat='identity', aes(y=country_continent.continent, x=value, group=variable, label=value), position = position_dodge2(width = .9, reverse=T), hjust=-.1, size=2.8)+
theme_pub()+
theme(#legend.position='bottom',
legend.justification = c(1, 0), legend.position = c(0.98, 0.02),
legend.title = element_text(colour="black", size=8),
legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF',
size=.5, linetype="solid",
colour ="white"),
legend.key=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_line(color = '#CCCCCC', linetype = 'solid', size = 0.4),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))
plt2
ggsave('fig_coverage/fig_coverage_B.png', width=180, height=180, units='mm', dpi=300)
# Combine plots
bottom_row <- plot_grid(plt2, plt3, labels = c('B', 'C'), align='hv', axis='tblr', label_size = 10, ncol=2)
top_row <- plot_grid(plt1, labels=c('A'), label_size=10)
full_plot <- plot_grid(top_row, bottom_row, nrow=2, rel_heights = c(2,.8), align='h', axis='l')
full_plot
ggsave('fig_coverage/fig_coverage.png', width=190.5, height=200, units='mm', dpi=300, bg='white')
ggsave('fig_coverage/fig_coverage.pdf', width=190.5, height=200, units='mm', bg='white')
library(tidyverse)
library(ggVennDiagram)
x <- list(
A = read_csv("fig_venn/ListeA_technologyTypologyRawMatFunctionSymbolicFeatureMisc.csv",
col_names = FALSE, locale = locale(encoding = "ASCII"))$X1,
B = read_csv("fig_venn/ListeB_humanRemains.csv",
col_names = FALSE, locale = locale(encoding = "ASCII"))$X1,
C = read_csv("fig_venn/ListeC_plantRemains.csv",
col_names = FALSE, locale = locale(encoding = "ASCII"))$X1,
D = read_csv("fig_venn/ListeD_paleofauna_animalRemains.csv",
col_names = FALSE, locale = locale(encoding = "ASCII"))$X1
)
View(x)
# Venn diagram ----
ggVennDiagram(x, set_color = 'black', label='both', set_size=3, label_size = 2, edge_size = 0.5,
category.names = c('Cultural remains', 'Human remains', 'Plant remains', 'Faunal remains'))+
scale_x_continuous(expand = expansion(mult = .2))+
scale_y_continuous(expand = expansion(mult = .2))+
scale_fill_gradient(name='Number of\nLocalities',
#low="#ffd28a", high="#4d4e6b",
low='#FFD28A', high='#A70D1F', space = "Lab",
trans='log', breaks=c(1, 10,100,1000), labels=c(1,10,100,1000),
limits=c(1,1000))+
scale_color_manual(values=c('black','black','black','black'))+
theme(text=element_text(size=8), #change font size of all text
plot.title=element_text(size=8), #change font size of plot title
legend.text=element_text(size=8), #change font size of legend text
legend.title=element_text(size=8))
# Stats ----
data <- process_data(venn)
stat_total <- c(x$A, x$B, x$C, x$D) %>% unique() %>% length() # number of sites in total category
stat_single <- data@region %>% filter(id %in% c(1,2,3,4)) %>% pull(count) %>% sum()   # number of loclaities with 1 category
# Stats ----
venn <- Venn(x)
data <- process_data(venn)
stat_single <- data@region %>% filter(id %in% c(1,2,3,4)) %>% pull(count) %>% sum()   # number of loclaities with 1 category
stat_double <- data@region %>% filter(id %in% c(12,13,14,23,24,34)) %>% pull(count) %>% sum()   # number of loclaities with 2 categories
data$region
data@region
stat_double <- data@region %>% filter(id %in% c(12,13,14,23,24,34)) %>% pull(count) %>% sum()   # number of loclaities with 2 categories
stat_triple <- data@region %>% filter(id %in% c(123,124,134,234)) %>% pull(count) %>% sum()   # number of loclaities with 3 categories
stat_quadruple <- data@region %>% filter(id %in% c(1234)) %>% pull(count) %>% sum()   # number of loclaities with 4 categories
328+180+28
(stat_double+stat_triple+stat_quadruple)/stat_total
stat_double+stat_triple+stat_quadruple  # More than 1 discipline
(stat_double+stat_triple+stat_quadruple)/stat_total # More than 1 discipline
328/1684
180/1684
28/1684
x$A
x$a %>% count()
x$A %>% count()
x$A %>% nrow()
x$A
View(x$A)
x$A %>% length()
x$A %>% length() # archaeological sites
x$B %>% length() # human sites
x$C %>% length() # plant sites
x$D %>% length() # animal sites
