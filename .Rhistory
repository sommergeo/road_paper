# Import data
road_sources <- read_delim("fig_sources/road_sources.csv",
delim = ";", escape_double = FALSE,
col_types = cols(...4 = col_skip()), trim_ws = TRUE)
road_sources <- road_sources %>% filter(publication_view.publication_year != 0) # Remove publications from Jesus' birth year
theme_pub <-  function(){
list(theme_classic(),
theme(text=element_text(size=8), #change font size of all text
axis.text=element_text(size=8), #change font size of axis text
axis.title=element_text(size=8), #change font size of axis titles
plot.title=element_text(size=8), #change font size of plot title
legend.text=element_text(size=8), #change font size of legend text
legend.title=element_text(size=8),
))
}
# Most cited publications
most_cited <- road_sources %>%
count(publication_view.source_title, sort=T) %>%
mutate(perc=n/sum(n), cumsum = cumsum(n), cumsum_perc=cumsum/sum(n), rank=row_number(), rank_perc=rank/length(rank))
View(most_cited)
View(most_cited)
# Plot Lorenz curve
plt2 <- ggplot(data=most_cited, aes(n), color='#4D4E6B')+
geom_abline(linetype = "dashed", color='black')+
coord_fixed() +
scale_x_continuous(expand = c(0,0), labels = scales::percent_format(accuracy = 1))+
scale_y_continuous(expand = c(0,0),labels = scales::percent_format(accuracy = 1))+
stat_lorenz(desc=F, color='#4D4E6B')+
geom_curve(
aes(x=0.9-rank_perc[375], y=1.1-cumsum_perc[375], xend=1-rank_perc[375], yend=1-cumsum_perc[375]), curvature=-0.5,
arrow = arrow(length = unit(4, 'pt'))
)+
geom_label(aes(x=0.9-rank_perc[375],  y=1.1-cumsum_perc[375], label = '?Einzeltitel? add up to\n72% (n=988) of\nthe sources'),
hjust = 1.1,
vjust = 0.5,
size = 2.8, fill='white', label.size=NA)+
geom_segment(aes(x=0.9-rank_perc[10], y=1-cumsum_perc[10], xend=1-rank_perc[10], yend=1-cumsum_perc[10]),
arrow = arrow(length = unit(4, "pt")))+
geom_label(aes(x=0.9-rank_perc[10],y=1-cumsum_perc[10], label = "10 journals account for\n30% (n=1437) of titles"),
hjust = 1,
vjust = 0.5,
size = 2.8, fill='white', label.size=NA)+
labs(x = "Cumulative percentage of sources",
y = "Cumulative percentage of titles")+
theme_pub()+
theme(plot.margin = margin(l=6, t=6, b=6, r=6, 'pt'),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plt2
# Plot timeline
plt1 <- ggplot()+
geom_histogram(data=road_sources, aes(x=publication_view.publication_year), binwidth = 1, fill='#4D4E6B')+
scale_x_continuous(breaks = seq(0, 2030, by = 20), limits=c(1865,2022), expand = c(0,0))+
scale_y_continuous(breaks = c(0, 10, 50, 100, 150, 200), expand = c(0,0))+
labs(x='Year of publication', y='Count')+
theme_pub()+
theme(panel.grid.major.y = element_line(),
plot.margin = margin(l=6, t=6, b=6, r=6, 'pt'))
plt1
ggsave('fig_sources/fig_sources_A.png', width=180, height=90, units='mm', dpi=300, bg='white')
# Plot Lorenz curve
plt2 <- ggplot(data=most_cited, aes(n), color='#4D4E6B')+
geom_abline(linetype = "dashed", color='black')+
coord_fixed() +
scale_x_continuous(expand = c(0,0), labels = scales::percent_format(accuracy = 1))+
scale_y_continuous(expand = c(0,0),labels = scales::percent_format(accuracy = 1))+
stat_lorenz(desc=F, color='#4D4E6B')+
geom_curve(
aes(x=0.9-rank_perc[375], y=1.1-cumsum_perc[375], xend=1-rank_perc[375], yend=1-cumsum_perc[375]), curvature=-0.5,
arrow = arrow(length = unit(4, 'pt'))
)+
geom_label(aes(x=0.9-rank_perc[375],  y=1.1-cumsum_perc[375], label = '?Einzeltitel? add up to\n72% (n=988) of\nthe sources'),
hjust = 1.1,
vjust = 0.5,
size = 2.8, fill='white', label.size=NA)+
geom_segment(aes(x=0.9-rank_perc[10], y=1-cumsum_perc[10], xend=1-rank_perc[10], yend=1-cumsum_perc[10]),
arrow = arrow(length = unit(4, "pt")))+
geom_label(aes(x=0.9-rank_perc[10],y=1-cumsum_perc[10], label = "10 journals account for\n30% (n=1437) of titles"),
hjust = 1,
vjust = 0.5,
size = 2.8, fill='white', label.size=NA)+
labs(x = "Cumulative percentage of sources",
y = "Cumulative percentage of titles")+
theme_pub()+
theme(plot.margin = margin(l=6, t=6, b=6, r=6, 'pt'),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plt2
ggsave('fig_sources/fig_sources_B.png', width=90, height=90, units='mm', dpi=300, bg='white')
# Combine plots
plt <- plot_grid(plt1, plt2, labels = c('A', 'B'), align='h', axis='tb', label_size = 10, ncol=2, rel_widths = c(100,80))
plt
View(most_cited)
# Plot Lorenz curve
plt2 <- ggplot(data=most_cited, aes(n), color='#4D4E6B')+
geom_abline(linetype = "dashed", color='black')+
coord_fixed() +
scale_x_continuous(expand = c(0,0), labels = scales::percent_format(accuracy = 1))+
scale_y_continuous(expand = c(0,0),labels = scales::percent_format(accuracy = 1))+
stat_lorenz(desc=F, color='#4D4E6B')+
geom_curve(
aes(x=0.9-rank_perc[375], y=1.1-cumsum_perc[375], xend=1-rank_perc[375], yend=1-cumsum_perc[375]), curvature=-0.5,
arrow = arrow(length = unit(4, 'pt'))
)+
geom_label(aes(x=0.9-rank_perc[375],  y=1.1-cumsum_perc[375], label = '?Einzeltitel? add up to\n72% (n=988) of\nthe sources'),
hjust = 1.1,
vjust = 0.5,
size = 2.8, fill='white', label.size=NA)+
geom_segment(aes(x=0.9-rank_perc[10], y=1-cumsum_perc[10], xend=1-rank_perc[10], yend=1-cumsum_perc[10]),
arrow = arrow(length = unit(4, "pt")))+
geom_label(aes(x=0.9-rank_perc[10],y=1-cumsum_perc[10], label = "10 journals account for\n30% (n=1437) of titles"),
hjust = 1,
vjust = 0.5,
size = 2.8, fill='white', label.size=NA)+
labs(x = "Cumulative percentage of sources",
y = "Cumulative percentage of titles")+
theme_pub()+
theme(plot.margin = margin(l=6, t=6, b=6, r=6, 'pt'),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plt2
View(most_cited)
# Plot Lorenz curve
plt2 <- ggplot(data=most_cited, aes(n), color='#4D4E6B')+
geom_abline(linetype = "dashed", color='black')+
coord_fixed() +
scale_x_continuous(expand = c(0,0), labels = scales::percent_format(accuracy = 1))+
scale_y_continuous(expand = c(0,0),labels = scales::percent_format(accuracy = 1))+
stat_lorenz(desc=F, color='#4D4E6B')+
geom_curve(
aes(x=0.9-rank_perc[375], y=1.1-cumsum_perc[375], xend=1-rank_perc[375], yend=1-cumsum_perc[375]), curvature=-0.5,
arrow = arrow(length = unit(4, 'pt'))
)+
geom_label(aes(x=0.9-rank_perc[375],  y=1.1-cumsum_perc[375], label = '?Einzeltitel? add up to\n20% (n=988) of\nthe titles'),
hjust = 1.1,
vjust = 0.5,
size = 2.8, fill='white', label.size=NA)+
geom_segment(aes(x=0.9-rank_perc[10], y=1-cumsum_perc[10], xend=1-rank_perc[10], yend=1-cumsum_perc[10]),
arrow = arrow(length = unit(4, "pt")))+
geom_label(aes(x=0.9-rank_perc[10],y=1-cumsum_perc[10], label = "10 journals account for\n30% (n=1437) of titles"),
hjust = 1,
vjust = 0.5,
size = 2.8, fill='white', label.size=NA)+
labs(x = "Cumulative percentage of sources",
y = "Cumulative percentage of titles")+
theme_pub()+
theme(plot.margin = margin(l=6, t=6, b=6, r=6, 'pt'),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plt2
plt2
ggsave('fig_sources/fig_sources_B.png', width=90, height=90, units='mm', dpi=300, bg='white')
# Combine plots
plt <- plot_grid(plt1, plt2, labels = c('A', 'B'), align='h', axis='tb', label_size = 10, ncol=2, rel_widths = c(100,80))
plt
View(most_cited)
ggsave('fig_sources/fig_sources.png', width=180, height=70, units='mm', dpi=300, bg='white')
library(tidyverse)
library(readr)
library(gglorenz)
library(cowplot)
# Import data
road_sources <- read_delim("fig_sources/road_sources.csv",
delim = ";", escape_double = FALSE,
col_types = cols(...4 = col_skip()), trim_ws = TRUE)
road_sources <- road_sources %>% filter(publication_view.publication_year != 0) # Remove publications from Jesus' birth year
View(road_sources)
road_sources %>% count(year, sort=T)
road_sources %>% count(publication_view.publication_year, sort=T)
road_sources %>% count(publication_view.publication_year, sort=T) %>% filter(publication_view.publication_year >= 2009)
road_sources %>% count(publication_view.publication_year, sort=T) %>% filter(publication_view.publication_year >= 2009) %>% pull(n)
road_sources %>% count(publication_view.publication_year, sort=T) %>% filter(publication_view.publication_year >= 2009) %>% pull(n) %>% mean()
road_sources %>% count(publication_view.publication_year, sort=T)
# Plot Lorenz curve
plt2 <- ggplot(data=most_cited, aes(n), color='#4D4E6B')+
geom_abline(linetype = "dashed", color='black')+
coord_fixed() +
scale_x_continuous(expand = c(0,0), labels = scales::percent_format(accuracy = 1))+
scale_y_continuous(expand = c(0,0),labels = scales::percent_format(accuracy = 1))+
stat_lorenz(desc=F, color='#4D4E6B')+
geom_curve(
aes(x=0.9-rank_perc[375], y=1.1-cumsum_perc[375], xend=1-rank_perc[375], yend=1-cumsum_perc[375]), curvature=-0.5,
arrow = arrow(length = unit(4, 'pt'))
)+
geom_label(aes(x=0.9-rank_perc[375],  y=1.1-cumsum_perc[375], label = '?Einzeltitel? add up to\n20% (n=988) of\nthe titles'),
hjust = 1.1,
vjust = 0.5,
size = 2.8, fill='white', label.size=NA)+
geom_segment(aes(x=0.9-rank_perc[10], y=1-cumsum_perc[10], xend=1-rank_perc[10], yend=1-cumsum_perc[10]),
arrow = arrow(length = unit(4, "pt")))+
geom_label(aes(x=0.9-rank_perc[10],y=1-cumsum_perc[10], label = "10 journals account for\n30% (n=1437) of titles"),
hjust = 1,
vjust = 0.5,
size = 2.8, fill='white', label.size=NA)+
labs(x = "Cumulative percentage of sources",
y = "Cumulative percentage of titles")+
theme_pub()+
theme(plot.margin = margin(l=6, t=6, b=6, r=6, 'pt'),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plt2
# Plot Lorenz curve
plt2 <- ggplot(data=most_cited, aes(n), color='#4D4E6B')+
geom_abline(linetype = "dashed", color='black')+
coord_fixed() +
scale_x_continuous(expand = c(0,0), labels = scales::percent_format(accuracy = 1))+
scale_y_continuous(expand = c(0,0),labels = scales::percent_format(accuracy = 1))+
stat_lorenz(desc=F, color='#4D4E6B')+
geom_curve(
aes(x=0.9-rank_perc[375], y=1.1-cumsum_perc[375], xend=1-rank_perc[375], yend=1-cumsum_perc[375]), curvature=-0.5,
arrow = arrow(length = unit(4, 'pt'))
)+
geom_label(aes(x=0.9-rank_perc[375],  y=1.1-cumsum_perc[375], label = '?Einzeltitel? add up to\n20% (n=988) of\nthe titles'),
hjust = 1.1,
vjust = 0.5,
size = 2.8, fill='white', label.size=NA)+
geom_segment(aes(x=0.9-rank_perc[10], y=1-cumsum_perc[10], xend=1-rank_perc[10], yend=1-cumsum_perc[10]),
arrow = arrow(length = unit(4, "pt")))+
geom_label(aes(x=0.9-rank_perc[10],y=1-cumsum_perc[10], label = "10 journals account for\n30% (n=1437) of titles"),
hjust = 1,
vjust = 0.5,
size = 2.8, fill='white', label.size=NA)+
labs(x = "Cumulative percentage of sources",
y = "Cumulative percentage of titles")+
theme_pub()+
theme(plot.margin = margin(l=6, t=6, b=6, r=6, 'pt'),
panel.border = element_rect(colour = "black", fill=NA, size=.5))
plt2
ggsave('fig_sources/fig_sources_B.png', width=90, height=90, units='mm', dpi=300, bg='white')
# Combine plots
plt <- plot_grid(plt1, plt2, labels = c('A', 'B'), align='h', axis='tb', label_size = 10, ncol=2, rel_widths = c(100,80))
plt
ggsave('fig_sources/fig_sources.png', width=180, height=70, units='mm', dpi=300, bg='white')
library(tidyverse)
library(readr)
library(scico)
library(sf)
library(ggspatial)
library(cowplot)
# Import data
road_schedule <- read_delim("fig_schedule/road_schedule.csv",
delim = ";", escape_double = FALSE, col_types = cols(country_continent.continent = col_skip(),
locality.idlocality = col_skip(),
locality.created = col_date(format = "%d.%m.%Y"),
...5 = col_skip()), trim_ws = TRUE)
table <- road_schedule %>% group_by(locality.country) %>% summarise(created=min(locality.created)) %>% mutate(year=as.numeric(format(created, format='%Y')))
theme_pub <-  function(){
list(theme_classic(),
theme(text=element_text(size=8), #change font size of all text
axis.text=element_text(size=8), #change font size of axis text
axis.title=element_text(size=8), #change font size of axis titles
plot.title=element_text(size=8), #change font size of plot title
legend.text=element_text(size=8), #change font size of legend text
legend.title=element_text(size=8)
))
}
# Merge ROAD with geodata
## Load geodata
world <- rnaturalearth::ne_countries(scale = 110, returnclass = 'sf') %>% st_transform(crs=st_crs(4326)) %>% st_make_valid()
## Find difference in country names
intersect(table$locality.country, world$admin)
setdiff(table$locality.country, world$admin)
world$admin
## Align countries with natural earth data (i will regret this)
table <- table %>% mutate(locality.country=recode(locality.country,
'Congo, Republic of the' = 'Swaziland',
'Eswatini' = 'Swaziland',
'Congo, Republic of the' = 'Democratic Republic of the Congo',
'Serbia'= 'Republic of Serbia',
'North Macedonia'= 'Macedonia',
'Tanzania'='United Republic of Tanzania'))
## Join
world <- left_join(world, table, by = c("admin" = 'locality.country'))
## Prepare geodata
offset <- 180-60
polygon <- st_polygon(x = list(rbind(
c(-0.0001 - offset, 90),
c(0 - offset, 90),
c(0 - offset, -90),
c(-0.0001 - offset, -90),
c(-0.0001 - offset, 90)
))) %>%
st_sfc() %>%
st_set_crs(4326)
world <- world %>% st_difference(polygon)
## Map
ggplot()+
geom_sf(data=world, aes(fill=year))
color_gradient <- c('#ffd28a','#fdc287','#f9b387','#f2a588','#e8988a','#dc8c8b','#cd828d','#bd798d','#ab718c','#986a89','#856384','#715c7d','#5f5575','#4d4e6b') #https://colordesigner.io/gradient-generator/?mode=lch#fafa6e-2A4858
plt1<- ggplot()+
geom_sf(data=world, aes(fill=factor(year), color=factor(year)), lwd=.01)+
coord_sf(crs = '+proj=natearth2 +lon_0=60 +x_0=0 +y_0=0 +R=6371008.7714 +units=m +no_defs +type=crs',xlim=c(-7500000,8600000), ylim=c(-4500000,8000000), expand=T)+
scale_x_continuous(breaks = seq(-180, 180, by = 30))+
scale_y_continuous(breaks = seq(-90, 90, by = 30))+
scale_color_manual(values=rev(color_gradient), na.value = '#DDDDDD', breaks=seq(2009,2022))+
scale_fill_manual(values=rev(color_gradient), na.value = '#DDDDDD', breaks=seq(2009,2022))+
#scale_fill_scico(
#  palette = 'batlow', begin = 0.1, limits = c(2009, 2022),
#name = 'Start', breaks = seq(2009,2022),
#guide = guide_colorsteps(barwidth = 20, barheight = .5,
#                         title.position = "top", title.hjust = 0.5, show.limits = TRUE)
#) +
#scale_color_scico(
#  palette = 'batlow', begin = 0.1, limits = c(2009, 2022),
#name = 'Start', breaks = seq(2009,2022),
#guide = guide_colorsteps(barwidth = 20, barheight = .5,
#                         title.position = "top", title.hjust = 0.5, show.limits = TRUE)
#) +
annotation_scale(location = 'bl', width_hint = 0.2) +
theme_pub()+
theme(panel.grid.major = element_line(color = '#DDDDDD', linetype = 'solid', size = 0.2),
#panel.background = element_rect(color = 'black', fill='#5D9CA5'),
panel.border = element_rect(colour = "black", fill=NA, size=1),
#legend.position='bottom',
legend.position='None',
#legend.justification = c(1, 0), legend.position = c(0.99, 0.01),
#legend.title = element_text(colour="black", size=8),
#legend.text = element_text(colour="black", size=8),
#legend.background = element_rect(fill='#FFFFFF',
#                                 size=.5, linetype="solid",
#                                 colour ="black"),
#legend.key=element_blank(),
plot.margin = margin(l=12, t=6, b=6, r=12, 'pt'))
plt1<- ggplot()+
geom_sf(data=world, aes(fill=factor(year), color=factor(year)), lwd=.01)+
coord_sf(crs = '+proj=natearth2 +lon_0=60 +x_0=0 +y_0=0 +R=6371008.7714 +units=m +no_defs +type=crs',xlim=c(-7500000,8600000), ylim=c(-4500000,8000000), expand=T)+
scale_x_continuous(breaks = seq(-180, 180, by = 30))+
scale_y_continuous(breaks = seq(-90, 90, by = 30))+
scale_color_manual(values=rev(color_gradient), na.value = '#DDDDDD', breaks=seq(2009,2022))+
scale_fill_manual(values=rev(color_gradient), na.value = '#DDDDDD', breaks=seq(2009,2022))+
#scale_fill_scico(
#  palette = 'batlow', begin = 0.1, limits = c(2009, 2022),
#name = 'Start', breaks = seq(2009,2022),
#guide = guide_colorsteps(barwidth = 20, barheight = .5,
#                         title.position = "top", title.hjust = 0.5, show.limits = TRUE)
#) +
#scale_color_scico(
#  palette = 'batlow', begin = 0.1, limits = c(2009, 2022),
#name = 'Start', breaks = seq(2009,2022),
#guide = guide_colorsteps(barwidth = 20, barheight = .5,
#                         title.position = "top", title.hjust = 0.5, show.limits = TRUE)
#) +
annotation_scale(location = 'bl', width_hint = 0.2) +
theme_pub()+
theme(panel.grid.major = element_line(color = '#DDDDDD', linetype = 'solid', size = 0.2),
#panel.background = element_rect(color = 'black', fill='#5D9CA5'),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
#legend.position='bottom',
legend.position='None',
#legend.justification = c(1, 0), legend.position = c(0.99, 0.01),
#legend.title = element_text(colour="black", size=8),
#legend.text = element_text(colour="black", size=8),
#legend.background = element_rect(fill='#FFFFFF',
#                                 size=.5, linetype="solid",
#                                 colour ="black"),
#legend.key=element_blank(),
plot.margin = margin(l=12, t=6, b=6, r=12, 'pt'))
plt1
ggsave('fig_schedule/fig_schedule_A.png', width=180, height=180, units='mm', dpi=300)
# Timeline ----
year_breaks <- seq(as.Date("2009-01-01"), as.Date("2023-01-01"), "years")
year_labels <- seq(as.Date("2008-01-01"), as.Date("2023-01-01"), "2 years")
quarter_breaks <- seq(as.Date("2009-01-01"), as.Date("2023-01-01"), "quarters")
plt2 <- ggplot()+
geom_histogram(data=road_schedule, aes(x=locality.created, fill=cut(locality.created, breaks=year_breaks)), breaks=quarter_breaks)+
#scale_fill_scico_d(palette = 'batlow', begin = 0.1) +
scale_fill_manual(values=rev(color_gradient), breaks=year_breaks)+
scale_x_date(breaks=year_labels, date_labels = "%Y", limits = as.Date(c('2008-01-01','2022-12-31')), expand = c(0,0))+
scale_y_continuous(expand = c(0,0))+
labs(x='Year', y='Number of localities created')+
theme_pub()+
theme(panel.grid.major.y = element_line(color = '#DDDDDD', linetype = 'solid', size = 0.2),
legend.position='None',
plot.margin = margin(l=12, t=6, b=6, r=12, 'pt'))
plt2
ggsave('fig_schedule/fig_schedule_B.png', width=180, height=180, units='mm', dpi=300)
# Combine plots ----
plt <- plot_grid(plt1, plt2, labels = c('A', 'B'), align='h', axis='tb', label_size = 10, ncol=2, rel_widths = c(1,0.74))
plt
ggsave('fig_schedule/fig_schedule.png', width=180, height=80, units='mm', dpi=300, bg='black')
library(tidyverse)
library(readr)
library(sf)
library(ggspatial)
library(cowplot)
# Import data
table <- read_delim('fig_coverage/road_coverage.csv',
delim = ';', escape_double = FALSE, trim_ws = TRUE)
table[is.na(table$locality.x)|is.na(table$locality.y),] # Show localities without coordinates
table[is.na(table$locality.idlocality),] # Show localities without locality name
table <- table %>% drop_na(c(locality.x, locality.y))
theme_pub <-  function(){
list(theme_classic(),
theme(text=element_text(size=8), #change font size of all text
axis.text=element_text(size=8), #change font size of axis text
axis.title=element_text(size=8), #change font size of axis titles
plot.title=element_text(size=8), #change font size of plot title
legend.text=element_text(size=8), #change font size of legend text
legend.title=element_text(size=8)
))
}
# World map ----
## Aggregate assemblages per locality
table2 <- table %>% count(locality.idlocality, locality.x, locality.y, sort=T)
table2[duplicated(table2$locality.idlocality),] # Show localities with duplicates, double coordinates etc.
## Make geodata
points <- st_as_sf(x = table2,
coords = c('locality.x', 'locality.y'),
#crs = '+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0',
crs = st_crs(4326))
## Mapping
### Download background maps
world <- rnaturalearth::ne_countries(scale = 110, returnclass = 'sf') %>% st_transform(crs=st_crs(4326)) %>% st_make_valid()
### define a long & slim polygon that overlaps the meridian line & set its CRS to match that of world
offset <- 180-60
polygon <- st_polygon(x = list(rbind(
c(-0.0001 - offset, 90),
c(0 - offset, 90),
c(0 - offset, -90),
c(-0.0001 - offset, -90),
c(-0.0001 - offset, 90)
))) %>%
st_sfc() %>%
st_set_crs(4326)
### Remove slim polygon
world <- world %>% st_difference(polygon)
plt1<- ggplot()+
geom_sf(data=world, color = 'white', fill = '#FFD28A', size=0.2)+
geom_sf(data=points, aes(size=n), fill='#A70D1F', color='grey10', shape=21)+
#coord_sf(crs = '+init=epsg:4326', xlim=c(-20, 180), ylim = c(-90, +90), expand=F)+
#coord_sf(crs = '+proj=moll +lon_0=60 +x_0=0 +y_0=0 +R=6371000 +units=m +no_defs')+
#coord_sf(crs = '+proj=wink2 +lon_0=60 +lat_1=50.4597762521898 +x_0=0 +y_0=0 +R=6371000 +units=m +no_defs')+
#coord_sf(crs = '+proj=eck4 +lon_0=60 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs',xlim=c(-2400000, 180), expand=F)+
coord_sf(crs = '+proj=natearth2 +lon_0=60 +x_0=0 +y_0=0 +R=6371008.7714 +units=m +no_defs +type=crs',xlim=c(-7500000,8600000), ylim=c(-4500000,8000000), expand=T)+
#coord_sf(crs = '+proj=natearth2 +lon_0=60 +x_0=0 +y_0=0 +R=6371008.7714 +units=m +no_defs +type=crs', expand=F)+
scale_x_continuous(breaks = seq(-180, 180, by = 30))+
scale_y_continuous(breaks = seq(-90, 90, by = 30))+
scale_size_continuous(name='Number of\nassemblages\nper locality', breaks=c(1,10,100,1000), labels=c(1,10,100,1000), limits = c(0,1000), range = c(.1, 18))+
#scale_fill_continuous(name='Number of assemblages', low='#A70D1F', high='#A70D1F50', limits = c(0,1000))+
#scale_color_continuous(name='Number of assemblages', low='#FFFFFF10', high='#FFFFFF99', limits = c(0,1000))+
annotation_scale(location = 'bl', width_hint = 0.2) +
theme_pub()+
theme(panel.grid.major = element_line(color = '#DDDDDD', linetype = 'solid', size = 0.2),
panel.background = element_rect(color = 'black', fill='#5D9CA5'),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
#legend.position='right',
legend.justification = c(1, 0), legend.position = c(0.99, 0.01),
legend.title = element_text(colour="black", size=8),
legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF',
size=.5, linetype="solid",
colour ="black"),
legend.key=element_blank(),
plot.margin = margin(l=24, t=6, b=6, r=12, 'pt'))
plt1
table3 <- table %>%
group_by(country_continent.continent) %>%
summarize(no_assemblages = n_distinct(assemblage.name, locality.idlocality), no_localities = n_distinct(locality.idlocality)) %>%
pivot_longer(cols=-country_continent.continent, names_to = 'variable', values_to = 'value') %>%
mutate(country_continent.continent = factor(country_continent.continent, levels = c('Asia', 'Africa', 'Europe')))
plt2 <- ggplot()+
geom_bar(data=table3, stat = 'identity', aes(y=country_continent.continent, x=value, fill=variable), position=position_dodge2(reverse=T))+
scale_fill_manual(values=c('#F07241', '#A70D1F'), name='Number of', labels=c('assemblages','localities'))+
scale_x_continuous(limits=c(0,12000), breaks = seq(0,12000,2000),expand = c(0,250))+
labs(x='Count', y='')+
geom_text(data=table3, stat='identity', aes(y=country_continent.continent, x=value, group=variable, label=value), position = position_dodge2(width = .9, reverse=T), hjust=-.1, size=2.8)+
theme_pub()+
theme(#legend.position='bottom',
legend.justification = c(1, 0), legend.position = c(0.98, 0.02),
legend.title = element_text(colour="black", size=8),
legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF',
size=.5, linetype="solid",
colour ="white"),
legend.key=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))
plt2
plt2 <- ggplot()+
geom_bar(data=table3, stat = 'identity', aes(y=country_continent.continent, x=value, fill=variable), position=position_dodge2(reverse=T))+
scale_fill_manual(values=c('#F07241', '#A70D1F'), name='Number of', labels=c('assemblages','localities'))+
scale_x_continuous(limits=c(0,12000), breaks = seq(0,12000,2000),expand = c(250,250))+
labs(x='Count', y='')+
geom_text(data=table3, stat='identity', aes(y=country_continent.continent, x=value, group=variable, label=value), position = position_dodge2(width = .9, reverse=T), hjust=-.1, size=2.8)+
theme_pub()+
theme(#legend.position='bottom',
legend.justification = c(1, 0), legend.position = c(0.98, 0.02),
legend.title = element_text(colour="black", size=8),
legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF',
size=.5, linetype="solid",
colour ="white"),
legend.key=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))
plt2
plt2 <- ggplot()+
geom_bar(data=table3, stat = 'identity', aes(y=country_continent.continent, x=value, fill=variable), position=position_dodge2(reverse=T))+
scale_fill_manual(values=c('#F07241', '#A70D1F'), name='Number of', labels=c('assemblages','localities'))+
scale_x_continuous(limits=c(0,12000), breaks = seq(0,12000,2000),expand = c(0,250))+
labs(x='Count', y='')+
geom_text(data=table3, stat='identity', aes(y=country_continent.continent, x=value, group=variable, label=value), position = position_dodge2(width = .9, reverse=T), hjust=-.1, size=2.8)+
theme_pub()+
theme(#legend.position='bottom',
legend.justification = c(1, 0), legend.position = c(0.98, 0.02),
legend.title = element_text(colour="black", size=8),
legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF',
size=.5, linetype="solid",
colour ="white"),
legend.key=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))
plt2
