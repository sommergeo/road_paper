labels = c('Temporal scope'),
guide = guide_legend(override.aes = list(alpha = 1)))+
scale_color_manual(name='Dating method', values=color_discrete)+
theme_pub()+
theme(legend.position='right',
#legend.background = element_rect(fill='#FFFFFF00',
#                                 size=.5, linetype="solid",
#                                 colour = NA),
#legend.key=element_blank(),
legend.spacing.y = unit(0, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))+
guides(color = guide_legend(ncol = 1, byrow = TRUE))
plt1
plt1 <- ggplot()+
coord_fixed()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_point(data=table2, aes(x=age_mean, y=age_range, color=dating_method), alpha=1, shape=20, size=1)+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(100,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_log10(breaks = c(1000, 10000, 100000, 1000000, 4000000), limits=c(100,6000000),
labels = c(1, 10, 100, 1000, 4000), expand = c(0,0))+
annotation_logticks()+
labs(x='Mean age (ka BP)', y='Age uncertainty (ka)')+
scale_fill_manual(name=NULL,
values = '#dddddd',
labels = c('Temporal scope'),
guide = guide_legend(override.aes = list(alpha = 1)))+
scale_color_manual(name='Dating method', values=color_discrete)+
theme_pub()+
theme(legend.position='right',
#legend.background = element_rect(fill='#FFFFFF00',
#                                 size=.5, linetype="solid",
#                                 colour = NA),
#legend.key=element_blank(),
legend.spacing.y = unit(0, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))+
guides(color = guide_legend(ncol = 1, byrow = TRUE))
plt1
ggsave('fig_coverage_temporal/fig_coverage_temporal.png', width=180, height=110, units='mm', dpi=300)
table2 %>% count(dating_method, sort=T)
table2 %>% count(dating_method, sort=T)[[1]]
table2 %>% count(dating_method, sort=T)[1,1]
table2 %>% count(dating_method, sort=T)
count(table, dating_method, sort=T)
count(table$dating_method, sort=T)
library(tidyverse)
library(readr)
# Import data
table1 <- read_delim("fig_coverage_temporal/road_coverage_arch_layer_age.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE,
skip = 1) %>%
mutate(age_range=pmax(positive_standard_deviation, negative_standard_deviation)) %>%
select(age_mean=age, age_range, dating_method)
table2 <- read_delim("fig_coverage_temporal/road_coverage_assemblage_layer_age.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE,
skip = 1) %>%
mutate(age_range=pmax(positive_standard_deviation, negative_standard_deviation)) %>%
select(age_mean=age, age_range, dating_method)
table3 <- read_delim("fig_coverage_temporal/road_coverage_geo_layer_age.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE,
skip = 1) %>%
mutate(age_range=pmax(positive_standard_deviation, negative_standard_deviation)) %>%
select(age_mean=age, age_range, dating_method)
table2 <- rbind(table1, table2, table3)
table2 <- table2 %>% mutate(dating_method=recode(dating_method,
'14C (radiocarbon) dating'='14C',
'OSL (optically stimulated thermoluminescence) dating' = 'OSL',
'U series (uranium-thorium) dating'='U series (Th/U, U/U, Pb/U)',
'ESR (electron spin resonance) dating' = 'ESR',
'TL (thermoluminescence) dating'='TL, ITL',
'ESR (electron spin resonance) dating, U series (uranium-thorium) dating' = 'Multiple methods',
'Ar/Ar (argon-argon) dating'='Ar/Ar, K/Ar',
'IRSL (infrared stimulated luminescence) dating'='IRSL, IRSL post-IR, IR-RF',
'AAR (amino acid racemization) dating'='Other',
'IRSL post-IR (post-infrared infrared stimulated luminescence) dating'='IRSL, IRSL post-IR, IR-RF',
'U series (uranium-lead) dating'='U series (Th/U, U/U, Pb/U)',
'K/Ar (potassium-argon) dating'='Ar/Ar, K/Ar',
'unknown'='Unknown',
'Al/Be (aluminum-beryllium) dating'='Cosmogenic nuclide',
'cosmogenic nuclide dating'='Cosmogenic nuclide',
'biostratigraphy'='Other',
'IRSL (infrared stimulated luminescence) dating, TL (thermoluminescence) dating'= 'Multiple methods',
'oxygen isotope stratigraphy, magnetic susceptibility'='Other',
'ESR (electron spin resonance) dating, U series (uranium-lead) dating, U series (uranium-thorium) dating'='Multiple methods',
'magnetostratigraphy'='Other',
'14C (radiocarbon) dating, ESR (electron spin resonance) dating'='Multiple methods',
'geology'='Other',
'IR-RF (infrared radiofluorescence) dating'='IRSL, IRSL post-IR, IR-RF',
'ITL (isothermal thermoluminescence) dating'='TL, ITL',
'oxygen isotope stratigraphy'='Other',
'fission track dating'='Other',
'OSL (optically stimulated thermoluminescence) dating, IRSL (infrared stimulated luminescence) dating, TL (thermoluminescence) dating'='Multiple methods',
'magnetic susceptibility'='Other',
'OSL (optically stimulated thermoluminescence) dating, TL (thermoluminescence) dating'= 'Multiple methods',
'Al/Be (aluminum-beryllium) dating, cosmogenic nuclide dating'='Multiple methods',
'obsidian hydration dating'='Other',
'TL (thermoluminescence) dating, IRSL (infrared stimulated luminescence) dating'='Multiple methods',
'Ar/Ar (argon-argon) dating, geology' = 'Ar/Ar, K/Ar',
'geology, magnetostratigraphy'='Other',
'IRSL (infrared stimulated luminescence) dating, OSL (optically stimulated thermoluminescence) dating'='Multiple methods',
'Rb/Sr (rubidium-strontium) dating'='Other',
'tephrostratigraphy'='Other'))
table <- rbind(table1, table2, table3)
table <- table %>% mutate(dating_method=recode(dating_method,
'14C (radiocarbon) dating'='14C',
'OSL (optically stimulated thermoluminescence) dating' = 'OSL',
'U series (uranium-thorium) dating'='U series (Th/U, U/U, Pb/U)',
'ESR (electron spin resonance) dating' = 'ESR',
'TL (thermoluminescence) dating'='TL, ITL',
'ESR (electron spin resonance) dating, U series (uranium-thorium) dating' = 'Multiple methods',
'Ar/Ar (argon-argon) dating'='Ar/Ar, K/Ar',
'IRSL (infrared stimulated luminescence) dating'='IRSL, IRSL post-IR, IR-RF',
'AAR (amino acid racemization) dating'='Other',
'IRSL post-IR (post-infrared infrared stimulated luminescence) dating'='IRSL, IRSL post-IR, IR-RF',
'U series (uranium-lead) dating'='U series (Th/U, U/U, Pb/U)',
'K/Ar (potassium-argon) dating'='Ar/Ar, K/Ar',
'unknown'='Unknown',
'Al/Be (aluminum-beryllium) dating'='Cosmogenic nuclide',
'cosmogenic nuclide dating'='Cosmogenic nuclide',
'biostratigraphy'='Other',
'IRSL (infrared stimulated luminescence) dating, TL (thermoluminescence) dating'= 'Multiple methods',
'oxygen isotope stratigraphy, magnetic susceptibility'='Other',
'ESR (electron spin resonance) dating, U series (uranium-lead) dating, U series (uranium-thorium) dating'='Multiple methods',
'magnetostratigraphy'='Other',
'14C (radiocarbon) dating, ESR (electron spin resonance) dating'='Multiple methods',
'geology'='Other',
'IR-RF (infrared radiofluorescence) dating'='IRSL, IRSL post-IR, IR-RF',
'ITL (isothermal thermoluminescence) dating'='TL, ITL',
'oxygen isotope stratigraphy'='Other',
'fission track dating'='Other',
'OSL (optically stimulated thermoluminescence) dating, IRSL (infrared stimulated luminescence) dating, TL (thermoluminescence) dating'='Multiple methods',
'magnetic susceptibility'='Other',
'OSL (optically stimulated thermoluminescence) dating, TL (thermoluminescence) dating'= 'Multiple methods',
'Al/Be (aluminum-beryllium) dating, cosmogenic nuclide dating'='Multiple methods',
'obsidian hydration dating'='Other',
'TL (thermoluminescence) dating, IRSL (infrared stimulated luminescence) dating'='Multiple methods',
'Ar/Ar (argon-argon) dating, geology' = 'Ar/Ar, K/Ar',
'geology, magnetostratigraphy'='Other',
'IRSL (infrared stimulated luminescence) dating, OSL (optically stimulated thermoluminescence) dating'='Multiple methods',
'Rb/Sr (rubidium-strontium) dating'='Other',
'tephrostratigraphy'='Other'))
table$dating_method <- table$dating_method %>% replace_na('Unknown')
table <- table %>% mutate(dating_method = factor(dating_method, levels=c('14C','OSL','U series (Th/U, U/U, Pb/U)','ESR','TL, ITL',
'Ar/Ar, K/Ar','IRSL, IRSL post-IR, IR-RF',
'Cosmogenic nuclide','Multiple methods','Other','Unknown')))
table %>% count(dating_method, sort=T)
## Theme
theme_pub <-  function(){
list(theme_classic(),
theme(text=element_text(size=8), #change font size of all text
axis.text=element_text(size=8), #change font size of axis text
axis.title=element_text(size=8), #change font size of axis titles
plot.title=element_text(size=8), #change font size of plot title
legend.text=element_text(size=8), #change font size of legend text
legend.title=element_text(size=8)
))
}
color_discrete <- c('#a70d1f','#a59837','#f07241','#383846','#e7d448','#4d4e6b','#2e5440','#5d9ca5','black','gray40','gray60')
plt1 <- ggplot()+
coord_fixed()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_point(data=table, aes(x=age_mean, y=age_range, color=dating_method), alpha=1, shape=20, size=1)+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(100,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_log10(breaks = c(1000, 10000, 100000, 1000000, 4000000), limits=c(100,6000000),
labels = c(1, 10, 100, 1000, 4000), expand = c(0,0))+
annotation_logticks()+
labs(x='Mean age (ka BP)', y='Age uncertainty (ka)')+
scale_fill_manual(name=NULL,
values = '#dddddd',
labels = c('Temporal scope'),
guide = guide_legend(override.aes = list(alpha = 1)))+
scale_color_manual(name='Dating method', values=color_discrete)+
theme_pub()+
theme(legend.position='right',
#legend.background = element_rect(fill='#FFFFFF00',
#                                 size=.5, linetype="solid",
#                                 colour = NA),
#legend.key=element_blank(),
legend.spacing.y = unit(0, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))+
guides(color = guide_legend(ncol = 1, byrow = TRUE))
plt1
rm(table21)
rm(table22)
rm(table23)
View(table)
plt1 <- ggplot()+
coord_fixed()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_point(data=table, aes(x=age_mean, y=age_range, color=dating_method), alpha=1, shape=20, size=1)+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(1,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_log10(breaks = c(1000, 10000, 100000, 1000000, 4000000), limits=c(1,6000000),
labels = c(1, 10, 100, 1000, 4000), expand = c(0,0))+
annotation_logticks()+
labs(x='Mean age (ka BP)', y='Age uncertainty (ka)')+
scale_fill_manual(name=NULL,
values = '#dddddd',
labels = c('Temporal scope'),
guide = guide_legend(override.aes = list(alpha = 1)))+
scale_color_manual(name='Dating method', values=color_discrete)+
theme_pub()+
theme(legend.position='right',
#legend.background = element_rect(fill='#FFFFFF00',
#                                 size=.5, linetype="solid",
#                                 colour = NA),
#legend.key=element_blank(),
legend.spacing.y = unit(0, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))+
guides(color = guide_legend(ncol = 1, byrow = TRUE))
plt1
plt1 <- ggplot()+
coord_fixed()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_point(data=table, aes(x=age_mean, y=age_range, color=dating_method), alpha=1, shape=20, size=1)+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(10,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_log10(breaks = c(1000, 10000, 100000, 1000000, 4000000), limits=c(10,6000000),
labels = c(1, 10, 100, 1000, 4000), expand = c(0,0))+
annotation_logticks()+
labs(x='Mean age (ka BP)', y='Age uncertainty (ka)')+
scale_fill_manual(name=NULL,
values = '#dddddd',
labels = c('Temporal scope'),
guide = guide_legend(override.aes = list(alpha = 1)))+
scale_color_manual(name='Dating method', values=color_discrete)+
theme_pub()+
theme(legend.position='right',
#legend.background = element_rect(fill='#FFFFFF00',
#                                 size=.5, linetype="solid",
#                                 colour = NA),
#legend.key=element_blank(),
legend.spacing.y = unit(0, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))+
guides(color = guide_legend(ncol = 1, byrow = TRUE))
plt1
plt1 <- ggplot()+
coord_fixed()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_point(data=table, aes(x=age_mean, y=age_range, color=dating_method), alpha=1, shape=20, size=1)+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(100,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_log10(breaks = c(1000, 10000, 100000, 1000000, 4000000), limits=c(100,6000000),
labels = c(1, 10, 100, 1000, 4000), expand = c(0,0))+
annotation_logticks()+
labs(x='Mean age (ka BP)', y='Age uncertainty (ka)')+
scale_fill_manual(name=NULL,
values = '#dddddd',
labels = c('Temporal scope'),
guide = guide_legend(override.aes = list(alpha = 1)))+
scale_color_manual(name='Dating method', values=color_discrete)+
theme_pub()+
theme(legend.position='right',
#legend.background = element_rect(fill='#FFFFFF00',
#                                 size=.5, linetype="solid",
#                                 colour = NA),
#legend.key=element_blank(),
legend.spacing.y = unit(0, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))+
guides(color = guide_legend(ncol = 1, byrow = TRUE))
plt1
plt1 <- ggplot()+
coord_fixed()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_point(data=table, aes(x=age_mean, y=age_range, color=dating_method), alpha=1, shape=20, size=1)+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(100,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_log10(breaks = c(1000, 10000, 100000, 1000000, 4000000), limits=c(10,6000000),
labels = c(1, 10, 100, 1000, 4000), expand = c(0,0))+
annotation_logticks()+
labs(x='Mean age (ka BP)', y='Age uncertainty (ka)')+
scale_fill_manual(name=NULL,
values = '#dddddd',
labels = c('Temporal scope'),
guide = guide_legend(override.aes = list(alpha = 1)))+
scale_color_manual(name='Dating method', values=color_discrete)+
theme_pub()+
theme(legend.position='right',
#legend.background = element_rect(fill='#FFFFFF00',
#                                 size=.5, linetype="solid",
#                                 colour = NA),
#legend.key=element_blank(),
legend.spacing.y = unit(0, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))+
guides(color = guide_legend(ncol = 1, byrow = TRUE))
plt1
ggsave('fig_coverage_temporal/fig_coverage_temporal.png', width=180, height=110, units='mm', dpi=300)
plt1 <- ggplot()+
coord_fixed()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_point(data=table, aes(x=age_mean, y=age_range, color=dating_method), alpha=1, shape=20, size=1)+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(100,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_log10(breaks = c(1000, 10000, 100000, 1000000, 4000000), limits=c(100,6000000),
labels = c(1, 10, 100, 1000, 4000), expand = c(0,0))+
annotation_logticks()+
labs(x='Mean age (ka BP)', y='Age uncertainty (ka)')+
scale_fill_manual(name=NULL,
values = '#dddddd',
labels = c('Temporal scope'),
guide = guide_legend(override.aes = list(alpha = 1)))+
scale_color_manual(name='Dating method', values=color_discrete)+
theme_pub()+
theme(legend.position='right',
#legend.background = element_rect(fill='#FFFFFF00',
#                                 size=.5, linetype="solid",
#                                 colour = NA),
#legend.key=element_blank(),
legend.spacing.y = unit(0, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))+
guides(color = guide_legend(ncol = 1, byrow = TRUE))
plt1
ggsave('fig_coverage_temporal/fig_coverage_temporal.png', width=180, height=110, units='mm', dpi=300)
plt1 <- ggplot()+
coord_fixed()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_point(data=table, aes(x=age_mean, y=age_range, color=dating_method), alpha=1, shape=20, size=1)+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(100,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_log10(breaks = c(1000, 10000, 100000, 1000000, 4000000), limits=c(10,6000000),
labels = c(1, 10, 100, 1000, 4000), expand = c(0,0))+
annotation_logticks()+
labs(x='Mean age (ka BP)', y='Age uncertainty (ka)')+
scale_fill_manual(name=NULL,
values = '#dddddd',
labels = c('Temporal scope'),
guide = guide_legend(override.aes = list(alpha = 1)))+
scale_color_manual(name='Dating method', values=color_discrete)+
theme_pub()+
theme(legend.position='right',
#legend.background = element_rect(fill='#FFFFFF00',
#                                 size=.5, linetype="solid",
#                                 colour = NA),
#legend.key=element_blank(),
legend.spacing.y = unit(0, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))+
guides(color = guide_legend(ncol = 1, byrow = TRUE))
plt1
plt1
ggsave('fig_coverage_temporal/fig_coverage_temporal.png', width=180, height=110, units='mm', dpi=300)
plt1 <- ggplot()+
#coord_fixed()+
geom_rect(aes(xmin = 20000, xmax = 3000000, ymin = 0, ymax = Inf, fill='scope'))+
geom_point(data=table, aes(x=age_mean, y=age_range, color=dating_method), alpha=1, shape=20, size=1)+
scale_x_log10(breaks = c(1000, 10000, 100000, 1000000, 6000000), limits=c(100,6000000),
labels = c(1, 10, 100, 1000, 6000), expand = c(0,0))+
scale_y_log10(breaks = c(1000, 10000, 100000, 1000000, 4000000), limits=c(10,6000000),
labels = c(1, 10, 100, 1000, 4000), expand = c(0,0))+
annotation_logticks()+
labs(x='Mean age (ka BP)', y='Age uncertainty (ka)')+
scale_fill_manual(name=NULL,
values = '#dddddd',
labels = c('Temporal scope'),
guide = guide_legend(override.aes = list(alpha = 1)))+
scale_color_manual(name='Dating method', values=color_discrete)+
theme_pub()+
theme(legend.position='right',
#legend.background = element_rect(fill='#FFFFFF00',
#                                 size=.5, linetype="solid",
#                                 colour = NA),
#legend.key=element_blank(),
legend.spacing.y = unit(0, 'pt'),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
plot.margin = margin(l=6, t=6, b=6, r=12, 'pt'))+
guides(color = guide_legend(ncol = 1, byrow = TRUE))
plt1
ggsave('fig_coverage_temporal/fig_coverage_temporal.png', width=180, height=110, units='mm', dpi=300)
View(table)
library(tidyverse)
library(readr)
library(gglorenz)
library(cowplot)
# Import data
road_sources <- read_delim("fig_sources/road_sources.csv",
delim = ";", escape_double = FALSE,
col_types = cols(...4 = col_skip()), trim_ws = TRUE)
road_sources <- road_sources %>% filter(publication_view.publication_year != 0) # Remove publications from Jesus' birth year
theme_pub <-  function(){
list(theme_classic(),
theme(text=element_text(size=8), #change font size of all text
axis.text=element_text(size=8), #change font size of axis text
axis.title=element_text(size=8), #change font size of axis titles
plot.title=element_text(size=8), #change font size of plot title
legend.text=element_text(size=8), #change font size of legend text
legend.title=element_text(size=8),
))
}
# Most cited publications
most_cited <- road_sources %>%
count(publication_view.source_title, sort=T) %>%
mutate(perc=n/sum(n), cumsum = cumsum(n), cumsum_perc=cumsum/sum(n), rank=row_number(), rank_perc=rank/length(rank))
View(most_cited)
# Plot timeline
plt1 <- ggplot()+
geom_histogram(data=road_sources, aes(x=publication_view.publication_year), binwidth = 1, fill='#4D4E6B')+
scale_x_continuous(breaks = seq(0, 2030, by = 20), limits=c(1865,2022), expand = c(0,0))+
scale_y_continuous(breaks = c(0, 10, 50, 100, 150, 200), expand = c(0,0))+
labs(x='Year of publication', y='Count')+
theme_pub()+
theme(panel.grid.major.y = element_line(),
plot.margin = margin(l=6, t=6, b=6, r=6, 'pt'))
plt1
View(road_sources)
View(most_cited)
View(road_sources)
library(tidyverse)
library(readr)
library(sf)
library(ggspatial)
library(cowplot)
# Import data
table <- read_delim('fig_coverage/road_coverage.csv',
delim = ';', escape_double = FALSE, trim_ws = TRUE)
table[is.na(table$locality.x)|is.na(table$locality.y),] # Show localities without coordinates
table[is.na(table$locality.idlocality),] # Show localities without locality name
table <- table %>% drop_na(c(locality.x, locality.y))
theme_pub <-  function(){
list(theme_classic(),
theme(text=element_text(size=8), #change font size of all text
axis.text=element_text(size=8), #change font size of axis text
axis.title=element_text(size=8), #change font size of axis titles
plot.title=element_text(size=8), #change font size of plot title
legend.text=element_text(size=8), #change font size of legend text
legend.title=element_text(size=8)
))
}
# World map ----
## Aggregate assemblages per locality
table2 <- table %>% count(locality.idlocality, locality.x, locality.y, sort=T)
table2[duplicated(table2$locality.idlocality),] # Show localities with duplicates, double coordinates etc.
## Make geodata
points <- st_as_sf(x = table2,
coords = c('locality.x', 'locality.y'),
#crs = '+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0',
crs = st_crs(4326))
## Mapping
### Download background maps
world <- rnaturalearth::ne_countries(scale = 110, returnclass = 'sf') %>% st_transform(crs=st_crs(4326)) %>% st_make_valid()
### define a long & slim polygon that overlaps the meridian line & set its CRS to match that of world
offset <- 180-60
polygon <- st_polygon(x = list(rbind(
c(-0.0001 - offset, 90),
c(0 - offset, 90),
c(0 - offset, -90),
c(-0.0001 - offset, -90),
c(-0.0001 - offset, 90)
))) %>%
st_sfc() %>%
st_set_crs(4326)
### Remove slim polygon
world <- world %>% st_difference(polygon)
plt1<- ggplot()+
geom_sf(data=world, color = 'white', fill = '#FFD28A', size=0.2)+
geom_sf(data=points, aes(size=n), fill='#A70D1F', color='grey10', shape=21)+
#coord_sf(crs = '+init=epsg:4326', xlim=c(-20, 180), ylim = c(-90, +90), expand=F)+
#coord_sf(crs = '+proj=moll +lon_0=60 +x_0=0 +y_0=0 +R=6371000 +units=m +no_defs')+
#coord_sf(crs = '+proj=wink2 +lon_0=60 +lat_1=50.4597762521898 +x_0=0 +y_0=0 +R=6371000 +units=m +no_defs')+
#coord_sf(crs = '+proj=eck4 +lon_0=60 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs',xlim=c(-2400000, 180), expand=F)+
coord_sf(crs = '+proj=natearth2 +lon_0=60 +x_0=0 +y_0=0 +R=6371008.7714 +units=m +no_defs +type=crs',xlim=c(-7500000,8600000), ylim=c(-4500000,8000000), expand=T)+
#coord_sf(crs = '+proj=natearth2 +lon_0=60 +x_0=0 +y_0=0 +R=6371008.7714 +units=m +no_defs +type=crs', expand=F)+
scale_x_continuous(breaks = seq(-180, 180, by = 30))+
scale_y_continuous(breaks = seq(-90, 90, by = 30))+
scale_size_continuous(name='Number of\nassemblages\nper locality', breaks=c(1,10,100,1000), labels=c(1,10,100,1000), limits = c(0,1000), range = c(.1, 18))+
#scale_fill_continuous(name='Number of assemblages', low='#A70D1F', high='#A70D1F50', limits = c(0,1000))+
#scale_color_continuous(name='Number of assemblages', low='#FFFFFF10', high='#FFFFFF99', limits = c(0,1000))+
annotation_scale(location = 'bl', width_hint = 0.2) +
theme_pub()+
theme(panel.grid.major = element_line(color = '#DDDDDD', linetype = 'solid', size = 0.2),
panel.background = element_rect(color = 'black', fill='#5D9CA5'),
panel.border = element_rect(colour = "black", fill=NA, size=1),
#legend.position='right',
legend.justification = c(1, 0), legend.position = c(0.99, 0.01),
legend.title = element_text(colour="black", size=8),
legend.text = element_text(colour="black", size=8),
legend.background = element_rect(fill='#FFFFFF',
size=.5, linetype="solid",
colour ="black"),
legend.key=element_blank(),
plot.margin = margin(l=24, t=6, b=6, r=12, 'pt'))
plt1
ggsave('fig_coverage/fig_coverage_A.png', width=180, height=160, units='mm', dpi=300)
ggsave('fig_coverage/fig_coverage_A.png', width=180, height=150, units='mm', dpi=300)
library(tidyverse)
library(readr)
library(gglorenz)
library(cowplot)
# Import data
road_sources <- read_delim("fig_sources/road_sources.csv",
delim = ";", escape_double = FALSE,
col_types = cols(...4 = col_skip()), trim_ws = TRUE)
road_sources <- road_sources %>% filter(publication_view.publication_year != 0) # Remove publications from Jesus' birth year
View(road_sources)
