library(RPostgreSQL)
install.packages("RPostgres")


con <- dbConnect(RPostgres::Postgres(), dbname = "roceeh", host="134.2.216.14", port=5432,
                 user="roadgis", password="XXXXXX")


tab <- dbGetQuery(con, 'SELECT DISTINCT on (assemblage.name, assemblage.category, country_continent.continent, locality.idlocality, locality.x, locality.y, query_age_min, query_age_max) assemblage.name as aname, assemblage.category as acategory, country_continent.continent as continent, locality.idlocality as locality, locality.x as x, locality.y as y,  -1 as query_age_min, -1 as query_age_max FROM assemblage, country_continent, locality WHERE (locality.idlocality = assemblage.locality_idlocality and locality.country = country_continent.country and (assemblage.locality_idlocality, assemblage.idassemblage) not in (SELECT assemblage.locality_idlocality, assemblage.idassemblage  FROM assemblage, country_continent, locality,all_age(0,6000000) as (locality varchar,assemblage int, assemblage_name varchar,query_age_min int, query_age_max int, age_comments varchar) WHERE ((locality.idlocality = assemblage.locality_idlocality and locality.country = country_continent.country) and locality = assemblage.locality_idlocality and assemblage = assemblage.idassemblage))) 
                  UNION  SELECT DISTINCT on (assemblage.name, assemblage.category, country_continent.continent, locality.idlocality, locality.x, locality.y, query_age_min, query_age_max) assemblage.name as aname, assemblage.category as acategory, country_continent.continent as continent, locality.idlocality as locality, locality.x as x, locality.y as y, query_age_min, query_age_max FROM assemblage, country_continent, locality,all_age(0,6000000) as (locality varchar,assemblage int, assemblage_name varchar,query_age_min int, query_age_max int, age_comments varchar) WHERE ((locality.idlocality = assemblage.locality_idlocality and locality.country = country_continent.country) and locality = assemblage.locality_idlocality and assemblage = assemblage.idassemblage) ORDER BY locality')

# ohne Datierung und ohne ass. mit Datierung
# tab <- dbGetQuery(con, 'SELECT DISTINCT on (assemblage.name, assemblage.category, country_continent.continent, locality.idlocality, locality.x, locality.y, query_age_min, query_age_max) assemblage.name as aname, assemblage.category as acategory, country_continent.continent as continent, locality.idlocality as locality, locality.x as x, locality.y as y,  -1 as query_age_min, -1 as query_age_max FROM assemblage, country_continent, locality WHERE (locality.idlocality = assemblage.locality_idlocality and locality.country = country_continent.country and (assemblage.locality_idlocality, assemblage.idassemblage) not in (SELECT assemblage.locality_idlocality, assemblage.idassemblage  FROM assemblage, country_continent, locality,all_age(0,6000000) as (locality varchar,assemblage int, assemblage_name varchar,query_age_min int, query_age_max int, age_comments varchar) WHERE ((locality.idlocality = assemblage.locality_idlocality and locality.country = country_continent.country) and locality = assemblage.locality_idlocality and assemblage = assemblage.idassemblage)))')

# keine Age Abfrage
# tab <- dbGetQuery(con, 'SELECT DISTINCT on (assemblage.name, assemblage.category, country_continent.continent, locality.idlocality, locality.x, locality.y, query_age_min, query_age_max) assemblage.name as aname, assemblage.category as acategory, country_continent.continent as continent, locality.idlocality as locality, locality.x as x, locality.y as y,  -1 as query_age_min, -1 as query_age_max FROM assemblage, country_continent, locality WHERE (locality.idlocality = assemblage.locality_idlocality and locality.country = country_continent.country)')

# assemblages mit Datierung
# tab <- dbGetQuery(con, 'SELECT DISTINCT on (assemblage.name, assemblage.category, country_continent.continent, locality.idlocality, locality.x, locality.y, query_age_min, query_age_max) assemblage.name as aname, assemblage.category as acategory, country_continent.continent as continent, locality.idlocality as locality, locality.x as x, locality.y as y, query_age_min, query_age_max FROM assemblage, country_continent, locality,all_age(0,6000000) as (locality varchar,assemblage int, assemblage_name varchar,query_age_min int, query_age_max int, age_comments varchar) WHERE ((locality.idlocality = assemblage.locality_idlocality and locality.country = country_continent.country) and locality = assemblage.locality_idlocality and assemblage = assemblage.idassemblage) ORDER BY locality')

write.csv(tab, 'road_coverage.csv')
